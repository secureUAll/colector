version: '3'

services:
  
  #db:
    #image: postgres
    #restart: always
    #ports:
      #- 5432:5432 # TODO! Remove on production!
    #volumes:
      #- ./init.sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      #- ./data/db:/var/lib/postgresql/data

    #environment:
      #- POSTGRES_DB=secureuall
      #- POSTGRES_USER=frontend
      #- POSTGRES_PASSWORD=abc

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    #logging:
      #driver: none 

  shared_mem:
    image: docker.io/bitnami/redis:6.2
    container_name: shared_mem
    hostname: shared_mem
    environment: 
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
    volumes:
      - 'redis_data:/bitnami/redis/data'

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    hostname: kafka
    ports:
      - 29092:29092
    environment:
      KAFKA_ADVERTISED_HOST: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: 'INIT:1:1,SCAN_REQUEST:1:1,FRONTEND:1:1,LOG:1:1,UPDATE:1:1,HEARTBEAT:1:1'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ADVERTISED_LISTENERS: SASL_SSL://kafka:9092,OUT://localhost:29092
      KAFKA_LISTENERS: SASL_SSL://kafka:9092,OUT://kafka:29092
      KAFKA_SSL_KEYSTORE_LOCATION: '/certs/kafka.server.keystore.jks'
      KAFKA_SSL_KEYSTORE_PASSWORD: 'CouPHBm7SH4j'
      KAFKA_SSL_KEY_PASSWORD: 'CouPHBm7SH4j'
      KAFKA_SSL_TRUSTSTORE_LOCATION: '/certs/kafka.server.truststore.jks'
      KAFKA_SSL_TRUSTSTORE_PASSWORD: 'CouPHBm7SH4j'
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ''
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: 'SASL_SSL'
      KAFKA_SSL_CLIENT_AUTH: "required"
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: 'PLAIN'
      KAFKA_SASL_ENABLED_MECHANISMS: 'PLAIN'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_SSL:SASL_SSL,OUT:SASL_SSL
      KAFKA_SSL_ENABLED_PROTOCOLS: TLSv1.2
      ZOOKEEPER_SASL_ENABLED: 'false'
      ZOOKEPER_SSL_CLIENT_ENABLE: 'true'
      ZOOKEPER_SSL_KEYSTORE_LOCATION: '/certs/kafka.server.keystore.jks'
      ZOOKEPER_SSL_KEYSTORE_PASSWORD: 'CouPHBm7SH4j'
      ZOOKEPER_SSL_TRUSTSTORE_LOCATION: '/certs/kafka.server.truststore.jks'
      ZOOKEPER_SSL_TRUSTSTORE_PASSWORD: 'CouPHBm7SH4j'
    volumes:
      - ./kafka_certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_config:/etc/kafka
    #logging:
      #driver: none 

  colector:
    build: ./colector
    container_name: colector
    depends_on: 
      - kafka
      - rabbitmq 
      - shared_mem 
      #- db
    restart: always
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    #logging:
      #driver: none 


networks:
  default:
    external:
      name: rede

volumes:
  redis_data:
    driver: local
